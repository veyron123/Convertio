name: 🧪 Tests & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 📥 Install dependencies
      run: npm ci
    
    - name: 🔍 Run linting (if available)
      run: npm run lint --if-present
    
    - name: 🧪 Run tests with coverage
      run: npm run test:ci
      env:
        NODE_ENV: test
        CLOUDCONVERT_KEY: test-key-for-ci
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
    
    - name: 🛡️ Run security audit
      run: npm audit --audit-level moderate
    
    - name: 🔒 Check for vulnerabilities
      run: npm audit --audit-level high

  build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: 📥 Install dependencies
      run: npm ci --only=production
    
    - name: 🚀 Test production build
      run: |
        npm start &
        sleep 5
        curl -f http://localhost:3002/api/health || exit 1
        pkill -f "node.*simple_server"
      env:
        NODE_ENV: production
        CLOUDCONVERT_KEY: test-production-key