#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import requests
import time
import os
import json

def test_conversion():
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    input_file = r"C:\Users\Denis\Desktop\Convertio\video for test\Screenshot (19).png"
    output_dir = r"C:\Users\Denis\Desktop\Convertio\video for test"
    
    print(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {input_file}")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(input_file):
        print(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {input_file}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    file_size = os.path.getsize(input_file)
    print(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size / 1024:.2f} KB")
    
    try:
        # –®–∞–≥ 1: –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
        print("\nüöÄ –®–∞–≥ 1: –ó–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏...")
        
        with open(input_file, 'rb') as f:
            files = {'file': f}
            data = {'outputformat': 'jpg'}
            
            response = requests.post(
                'http://localhost:3002/api/start-conversion',
                files=files,
                data=data,
                timeout=30
            )
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {response.status_code}")
            print(f"Response: {response.text}")
            return
        
        result = response.json()
        job_id = result['id']
        print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞! Job ID: {job_id}")
        
        # –®–∞–≥ 2: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        print("\n‚è≥ –®–∞–≥ 2: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞...")
        
        max_attempts = 30
        for attempt in range(max_attempts):
            print(f"üìä –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_attempts}...")
            
            status_response = requests.get(
                f'http://localhost:3002/api/conversion-status/{job_id}',
                timeout=10
            )
            
            if status_response.status_code != 200:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
                time.sleep(2)
                continue
            
            status_data = status_response.json()
            print(f"Status: {status_data.get('status')}, Step: {status_data.get('step')}")
            
            if status_data.get('status') == 'finished' and status_data.get('output'):
                # –®–∞–≥ 3: –°–∫–∞—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                download_url = status_data['output']['url']
                print(f"\n‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª...")
                print(f"üîó URL: {download_url}")
                
                # –°–∫–∞—á–∏–≤–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
                download_response = requests.get(download_url, timeout=30)
                if download_response.status_code == 200:
                    output_file = os.path.join(output_dir, "Screenshot_19_converted.jpg")
                    
                    with open(output_file, 'wb') as f:
                        f.write(download_response.content)
                    
                    print(f"üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")
                    print(f"üìä –†–∞–∑–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {len(download_response.content) / 1024:.2f} KB")
                    print("üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    return
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_response.status_code}")
                    return
            
            elif status_data.get('status') == 'error':
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {status_data}")
                return
            
            # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            time.sleep(3)
        
        print("‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è")
        
    except requests.exceptions.RequestException as e:
        print(f"üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_conversion()